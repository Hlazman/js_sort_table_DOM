{"version":3,"sources":["scripts/main.js"],"names":["sortColumns","heads","document","querySelectorAll","rows","arrTable","forEach","row","index","length","push","name","children","innerText","position","age","salary","sortTable","sortedBy","item","closest","addEventListener","e","target","sort","a","b","localeCompare","parseFloat","slice"],"mappings":";AAAA,aAEA,IAGIA,EAHEC,EAAQC,SAASC,iBAAiB,MAClCC,EAAOF,SAASC,iBAAiB,MACjCE,EAAW,GAGjBD,EAAKE,QAAQ,SAACC,EAAKC,GACH,IAAVA,GAAeA,IAAUJ,EAAKK,OAAS,GACzCJ,EAASK,KAAK,CACZC,KAAMJ,EAAIK,SAAS,GAAGC,UACtBC,SAAUP,EAAIK,SAAS,GAAGC,UAC1BE,IAAKR,EAAIK,SAAS,GAAGC,UACrBG,OAAQT,EAAIK,SAAS,GAAGC,cAK9B,IAAMI,EAAY,SAACC,GACjBA,IAEAd,EAAKE,QAAQ,SAACC,EAAKC,GACH,IAAVA,GAAeA,IAAUJ,EAAKK,OAAS,IACzCF,EAAIK,SAAS,GAAGC,UAAYR,EAASG,EAAQ,GAAGG,KAChDJ,EAAIK,SAAS,GAAGC,UAAYR,EAASG,EAAQ,GAAGM,SAChDP,EAAIK,SAAS,GAAGC,UAAYR,EAASG,EAAQ,GAAGO,IAChDR,EAAIK,SAAS,GAAGC,UAAYR,EAASG,EAAQ,GAAGQ,WAKtDf,EAAMK,QAAQ,SAAAa,GACRA,EAAKC,QAAQ,UACfD,EAAKE,iBAAiB,QAAS,SAACC,GACtBA,OAAAA,EAAEC,OAAOV,WACV,IAAA,OACHb,EAAc,WACZK,EAASmB,KAAK,SAACC,EAAGC,GAAMD,OAAAA,EAAEd,KAAKgB,cAAcD,EAAEf,SAEjD,MAEG,IAAA,WACHX,EAAc,WACZK,EAASmB,KAAK,SAACC,EAAGC,GAAMD,OAAAA,EAAEX,SAASa,cAAcD,EAAEZ,aAErD,MAEG,IAAA,MACHd,EAAc,WACZK,EAASmB,KAAK,SAACC,EAAGC,GAAMD,OAAAA,EAAEV,IAAMW,EAAEX,OAEpC,MAEG,IAAA,SACHf,EAAc,WACZK,EAASmB,KAAK,SAACC,EAAGC,GAAME,OAAAA,WAAWH,EAAET,OAAOa,MAAM,IAC9CD,WAAWF,EAAEV,OAAOa,MAAM,OAKpCZ,EAAUjB","file":"main.20693d43.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst heads = document.querySelectorAll('th');\nconst rows = document.querySelectorAll('tr');\nconst arrTable = [];\nlet sortColumns;\n\nrows.forEach((row, index) => {\n  if (index !== 0 && index !== rows.length - 1) {\n    arrTable.push({\n      name: row.children[0].innerText,\n      position: row.children[1].innerText,\n      age: row.children[2].innerText,\n      salary: row.children[3].innerText,\n    });\n  }\n});\n\nconst sortTable = (sortedBy) => {\n  sortedBy();\n\n  rows.forEach((row, index) => {\n    if (index !== 0 && index !== rows.length - 1) {\n      row.children[0].innerText = arrTable[index - 1].name;\n      row.children[1].innerText = arrTable[index - 1].position;\n      row.children[2].innerText = arrTable[index - 1].age;\n      row.children[3].innerText = arrTable[index - 1].salary;\n    }\n  });\n};\n\nheads.forEach(item => {\n  if (item.closest('thead')) {\n    item.addEventListener('click', (e) => {\n      switch (e.target.innerText) {\n        case 'Name':\n          sortColumns = () => {\n            arrTable.sort((a, b) => a.name.localeCompare(b.name));\n          };\n          break;\n\n        case 'Position':\n          sortColumns = () => {\n            arrTable.sort((a, b) => a.position.localeCompare(b.position));\n          };\n          break;\n\n        case 'Age':\n          sortColumns = () => {\n            arrTable.sort((a, b) => a.age - b.age);\n          };\n          break;\n\n        case 'Salary':\n          sortColumns = () => {\n            arrTable.sort((a, b) => parseFloat(a.salary.slice(1))\n              - parseFloat(b.salary.slice(1)));\n          };\n          break;\n      }\n\n      sortTable(sortColumns);\n    });\n  }\n});\n"]}